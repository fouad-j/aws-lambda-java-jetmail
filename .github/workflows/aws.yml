name: Deploy Lambda JetMail Notification
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: üèóÔ∏è  Build Project
    runs-on: ubuntu-latest

    steps:
      - name: ü¶†  Clone repository
        uses: actions/checkout@v1

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'
          cache: gradle

      - name: Build Project
        run: ./gradlew buildZip

      - name: üóÑÔ∏è  Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mail-notification
          path: build
          retention-days: 1

  deploy:
    name: üöÄ Deploy to LambdaAWS ${{ matrix.env }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    strategy:
      matrix:
        env: ['dev', 'prod']
      max-parallel: 1
    environment: ${{ matrix.env }}

    steps:
      - name: üóÑ  Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: mail-notification

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{  secrets.AWS_REGION }}

      - name: Deploy function
        run: |
          aws lambda update-function-code \
          --function-name ${SELECTED_ENV}-mail-notification \
          --zip-file fileb://distributions/aws-lambda-mail-notification-1.0-SNAPSHOT.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          SELECTED_ENV: ${{ matrix.env }}
